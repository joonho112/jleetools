% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/my_read_dta.R
\name{my_read_dta}
\alias{my_read_dta}
\title{Read a Stata \emph{.dta} file and \strong{safely} convert labelled vectors to factors}
\usage{
my_read_dta(file_path, label_to_factor = TRUE)
}
\arguments{
\item{file_path}{\code{character(1)}. Path to the Stata \emph{.dta} file.}

\item{label_to_factor}{\code{logical(1)}, default \code{TRUE}.
\itemize{
\item \strong{\code{TRUE}} – convert numeric \code{labelled} vectors to \code{factor}s using their
value labels.
\item \strong{\code{FALSE}} – keep them as numeric; label attributes are preserved.
}}
}
\value{
A data frame/tibble identical to the output of
\code{haven::read_dta()}, with optional factor conversion \strong{and} Unicode /
whitespace normalisation applied to \emph{all} factor levels.
}
\description{
A robust wrapper around \code{\link[haven:read_dta]{haven::read_dta()}} that
\enumerate{
\item \emph{Optionally} converts \strong{numeric \code{labelled}} vectors to \code{factor}s, \strong{and}
\item Normalises the factor levels so hidden non-breaking spaces (NBSP \verb{U+00A0},
narrow NBSP \verb{U+202F}) and other Unicode “look-alike” characters no longer
break downstream comparisons.
}
}
\details{
\itemize{
\item Conversion uses \code{\link[haven:as_factor]{haven::as_factor()}} with \code{levels = "labels"}.
\item Unicode clean-up steps (performed on every factor column):
\enumerate{
\item \strong{NFKC normalisation} – collapses visually identical glyphs
(e.g. “≥” variants) to a single code-point.
\item \strong{NBSP → regular space} replacement.
\item \strong{\code{trimws()}} to remove leading/trailing white-space, including NBSPs.
}
\item These operations rely on \strong{stringi}, which is imported automatically.
}
}
\examples{
\dontrun{
# Default – convert labels and clean up factor levels
df <- my_read_dta("survey_data.dta")

# Keep numeric codes; still cleans NBSP/Unicode in existing factors
df_raw <- my_read_dta("survey_data.dta", label_to_factor = FALSE)
}

}
\seealso{
\code{\link[haven:read_dta]{haven::read_dta()}}, \code{\link[haven:as_factor]{haven::as_factor()}},
\code{\link[labelled:reexports]{labelled::is.labelled()}}, \code{\link[stringi:stri_trans_general]{stringi::stri_trans_general()}}
}
